"
I represent a mozilla::gfx::Rect structure.
My dimension is defined by origin (x and y) and extent (width and height).

Public API and Key Messages

-asRectangle - to convert to Pharo Rectangle
- x/x:
- y/y:
- width/width:
- height/height:

   MozNativeRect fromRectangle: (50@50 extent: 100@100)
 
Internal Representation and Key Implementation Points.

	My accessor methods are auto-generated by FFI from structure declaration.
	I am always created on image side and do not require any additional memory management.
"
Class {
	#name : #MozNativeRect,
	#superclass : #FFIExternalStructure,
	#traits : 'TMozLibrary',
	#classTraits : 'TMozLibrary classTrait',
	#classVars : [
		'OFFSET_HEIGHT',
		'OFFSET_WIDTH',
		'OFFSET_X',
		'OFFSET_Y'
	],
	#category : 'Sparta-Moz2D-External'
}

{ #category : #converting }
MozNativeRect class >> asExternalTypeOn: generator [
	"use handle ivar to hold my instance"
	^ FFIExternalObjectType objectClass: self
]

{ #category : #'field definition' }
MozNativeRect class >> fieldsDesc [
	"
	self rebuildFieldAccessors
	"
	^ #(
		float x; float y;
		float width; float height
	)
]

{ #category : #'instance creation' }
MozNativeRect class >> fromRectangle: aRectangle [

	^ self new
		x: aRectangle origin x;
		y: aRectangle origin y;
		width: aRectangle width;
		height: aRectangle height
]

{ #category : #converting }
MozNativeRect >> asRectangle [

	^ (self x @ self y) extent: (self width @ self height)
]

{ #category : #'accessing structure variables' }
MozNativeRect >> height [
	"This method was automatically generated"
	^handle floatAt: OFFSET_HEIGHT
]

{ #category : #'accessing structure variables' }
MozNativeRect >> height: anObject [
	"This method was automatically generated"
	handle floatAt: OFFSET_HEIGHT put: anObject
]

{ #category : #'accessing structure variables' }
MozNativeRect >> width [
	"This method was automatically generated"
	^handle floatAt: OFFSET_WIDTH
]

{ #category : #'accessing structure variables' }
MozNativeRect >> width: anObject [
	"This method was automatically generated"
	handle floatAt: OFFSET_WIDTH put: anObject
]

{ #category : #'accessing structure variables' }
MozNativeRect >> x [
	"This method was automatically generated"
	^handle floatAt: OFFSET_X
]

{ #category : #'accessing structure variables' }
MozNativeRect >> x: anObject [
	"This method was automatically generated"
	handle floatAt: OFFSET_X put: anObject
]

{ #category : #'accessing structure variables' }
MozNativeRect >> y [
	"This method was automatically generated"
	^handle floatAt: OFFSET_Y
]

{ #category : #'accessing structure variables' }
MozNativeRect >> y: anObject [
	"This method was automatically generated"
	handle floatAt: OFFSET_Y put: anObject
]
